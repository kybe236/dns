var searchIndex = new Map(JSON.parse('[\
["dns",{"doc":"DNS Client in Development","t":"FFOONNNNHONNNNONNNOOOOOOOONNNNNNNN","n":["DnsOption","Question","ancount","arcount","borrow","borrow","borrow_mut","borrow_mut","dns","flags","fmt","fmt","from","from","id","into","into","new","nscount","qclass","qclass","qdcount","qname","qtype","qtype","question","set_flags","set_name","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"dns"],[34,"core::fmt"],[35,"core::fmt"],[36,"alloc::vec"],[37,"core::result"],[38,"core::any"]],"d":["","","an unsigned 16 bit integer specifying the number of …","an unsigned 16 bit integer specifying the number of …","","","","","","See the <code>DnsOption::set_flags()</code> method for more information.","","","Returns the argument unchanged.","Returns the argument unchanged.","A 16 bit identifier assigned by the program that generates …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new DnsOption","an unsigned 16 bit integer specifying the number of name …","","a two octet code that specifies the class of the query. …","An unsigned 16 bit integer specifying the number of …","a domain name represented as a sequence of labels, where …","","a two octet code which specifies the type of the query. …","See <code>Question</code> for more information.","Sets the request flags","Sets the domain name","","","","","",""],"i":[0,0,1,1,1,5,1,5,0,1,1,5,1,5,1,1,5,1,1,1,5,1,5,1,5,1,1,1,1,5,1,5,1,5],"f":"````{ce{}{}}000{bd}`{{bf}h}{{jf}h}{cc{}}0`44{{}b}````````{{bl}d}{{b{A`{n}}}d}{c{{Ab{e}}}{}{}}000{cAd{}}0","c":[],"p":[[5,"DnsOption",0],[1,"unit"],[5,"Formatter",34],[8,"Result",34],[5,"Question",0],[1,"u16"],[5,"String",35],[5,"Vec",36],[6,"Result",37],[5,"TypeId",38]],"b":[]}],\
["lib",{"doc":"","t":"FNNHNNNNNNNN","n":["DnsOption","borrow","borrow_mut","dns","fmt","from","into","new","set_flags","try_from","try_into","type_id"],"q":[[0,"lib"],[12,"core::fmt"],[13,"core::fmt"],[14,"core::result"],[15,"core::any"]],"d":["","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Set flags","","",""],"i":[0,1,1,0,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[1,3],4],[-1,-1,[]],[-1,-2,[],[]],[5,1],[[1,6],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[5,"DnsOption",0],[1,"tuple"],[5,"Formatter",12],[8,"Result",12],[5,"String",13],[1,"u16"],[6,"Result",14],[5,"TypeId",15]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
